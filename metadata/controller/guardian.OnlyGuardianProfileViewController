{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "guardian.OnlyGuardianProfileViewController",
        "stores": [
            "guardian.GuardianTypeStore",
            "guardian.GuardianProfileStore",
            "security.SecurityStore"
        ]
    },
    "designerId": "14e7624a-76a0-421d-81ed-2c093e4fc262",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "OnlyGuardianForm",
                "selector": "#guardianonlyprofileform"
            },
            "name": "OnlyGuardianForm",
            "designerId": "cb6416d3-4ff5-4f14-883f-606911b2c651"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "OnlyGuardianGridPanel",
                "selector": "#guardianonlygridpanel"
            },
            "name": "OnlyGuardianGridPanel",
            "designerId": "419d0b77-7f15-490d-a996-d319e71876f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardianonlygridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGuardianonlygridpanelViewReady",
                "implHandler": [
                    "debugger;",
                    "console.log('onGuardianprofilerefreshtoolClick()');",
                    "var myStore = Ext.getStore('guardian.GuardianProfileStore');",
                    "",
                    "var securityStore = Ext.getStore('security.SecurityStore');",
                    "var securityRecord = securityStore.getAt(0);",
                    "this.userName = securityRecord.get('userName');",
                    "this.userRole = securityRecord.get('userRole');",
                    "var ss_ = Ext.getStore('student.StudentStore');",
                    "",
                    "var studentName_;",
                    "",
                    "",
                    "var r_ = ss_.getAt(0);",
                    "var title;",
                    "var myGrid = this.getOnlyGuardianGridPanel();",
                    "",
                    "",
                    "if( this.userRole === 'ROLE_FACULTY' || this.userRole === 'ROLE_SCHOOL'){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}",
                    "else if( this.userRole === 'ROLE_ADMIN'){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this",
                    "\t});",
                    "}",
                    "else{",
                    "\t//title = r_.get('firstName') + \" \" + r_.get('middleName') + ' ' + r_.get('lastName');",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']' );",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}",
                    "this.selectedIndex = 0;",
                    "myGrid.getSelectionModel().select(0);"
                ],
                "name": "viewready",
                "scope": "me"
            },
            "name": "onGuardianonlygridpanelViewReady",
            "designerId": "9f0f5bc3-be7a-40c1-9331-ef5dc19dc0a1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "form",
                    "record"
                ],
                "fn": "loadForm",
                "implHandler": [
                    "debugger;",
                    "console.log('guardian.OnlyGuardianProfileViewController.loadForm(): completed');",
                    "console.log( form );",
                    "",
                    "form.loadRecord( record );",
                    "",
                    "var myFields = form.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "    myFields.items[i].disable();",
                    "}",
                    ""
                ]
            },
            "name": "loadForm",
            "designerId": "bc267472-703f-4fc0-945d-1e3777a52ca6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMyJsonStoreLoad",
                "implHandler": [
                    "//debugger;",
                    "//var g_ = Ext.ComponentQuery.query(\"#monthlysummarygridpanel\")[0];",
                    "var g_ = this.getOnlyGuardianGridPanel();",
                    "",
                    "if (g_.getStore().getCount() > 0) {",
                    "    g_.getSelectionModel().deselectAll();",
                    "    g_.getSelectionModel().select( 0 );",
                    "}",
                    "",
                    "this.gridViewReady = true;"
                ]
            },
            "name": "onMyJsonStoreLoad",
            "designerId": "e0ebb025-c886-4546-82b6-abf35bcbb930"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveOnlyGuardianProfileForm",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Save Guardian Profile Form\" );",
                    "//var myForm\t\t\t\t\t= button.up().getForm();",
                    "var myForm = this.getOnlyGuardianForm();",
                    "",
                    "",
                    "//\tGet the stores that we will need",
                    "var myStore\t\t= this.getStore( 'guardian.GuardianProfileStore' );",
                    "",
                    "//var rForm = myForm.getForm();",
                    "",
                    "//var formValues1\t= myForm.getValues();",
                    "//var formValues\t= myForm.getForm().getValues();",
                    "var formFields\t= myForm.getForm().getFields();",
                    "//var name\t= formFields.items[0].name;",
                    "//var value\t= formFields.items[0].lastValue;",
                    "//var test\t= this.getFormValue( formFields, 'middleName');",
                    "//debugger;",
                    "",
                    "//\tCreate the form record.",
                    "var myRecord\t= myForm.getRecord();",
                    "",
                    "myRecord.set('firstName', this.getFormValue( formFields, 'firstName' ) );",
                    "myRecord.set('middleName', this.getFormValue( formFields, 'middleName' ));",
                    "myRecord.set('lastName', this.getFormValue( formFields, 'lastName' ));",
                    "myRecord.set('phone1', this.getFormValue( formFields, 'phone1' ));",
                    "myRecord.set('phone2', this.getFormValue( formFields, 'phone2' ));",
                    "myRecord.set('address1', this.getFormValue( formFields, 'address1' ));",
                    "myRecord.set('address2', this.getFormValue( formFields, 'address2' ));",
                    "myRecord.set('city', this.getFormValue( formFields, 'city' ));",
                    "myRecord.set('province', this.getFormValue( formFields, 'province' ));",
                    "myRecord.set('postalCode', this.getFormValue( formFields, 'postalCode' ));",
                    "myRecord.set('country', this.getFormValue( formFields, 'country' ));",
                    "myRecord.set('email', this.getFormValue( formFields, 'email' ));",
                    "myRecord.set('dob', this.getFormValue( formFields, 'dob' ));",
                    "",
                    "myRecord.set('whoUpdated', 'login');",
                    "myRecord.set('lastUpdated', new Date());",
                    "",
                    "debugger;",
                    "",
                    "//sync the store.",
                    "myStore.sync();"
                ]
            },
            "name": "saveOnlyGuardianProfileForm",
            "designerId": "95303e53-fd9f-471b-ab1e-1018692f0c76"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "formFields",
                    "name"
                ],
                "fn": "getFormValue",
                "implHandler": [
                    "//var name\t= formFields.items[0].name;",
                    "//var value\t= formFields.items[0].lastValue;",
                    "for( var i = 0; i < formFields.length; i++ )",
                    "{",
                    "    if( formFields.items[i].name === name )",
                    "    {",
                    "        return formFields.items[i].lastValue;",
                    "    }",
                    "}",
                    "return \"\";"
                ]
            },
            "name": "getFormValue",
            "designerId": "177adb66-b67d-4c4c-834e-9d8f424913c9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardianrefreshtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onOnlyguardianrefreshtoolClick",
                "implHandler": [
                    "debugger;",
                    "var myStore = Ext.getStore('guardian.GuardianProfileStore');",
                    "myStore.reload();",
                    "",
                    "if( false ){",
                    "//debugger;\t",
                    "console.log('onGuardianprofilerefreshtoolClick()');",
                    "var myStore = Ext.getStore('guardian.GuardianProfileStore');",
                    "",
                    "var securityStore = Ext.getStore('security.SecurityStore');",
                    "var securityRecord = securityStore.getAt(0);",
                    "this.userName = securityRecord.get('userName');",
                    "this.userRole = securityRecord.get('userRole');",
                    "var title;",
                    "var myGrid = this.getOnlyGuardianGridPanel();",
                    "",
                    "",
                    "if( this.userRole === 'ROLE_FACULTY'){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}",
                    "else if( this.userRole === 'ROLE_ADMIN'){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this",
                    "\t});",
                    "}",
                    "else{",
                    "\ttitle = r_.get('firstName') + \" \" + r_.get('middleName') + ' ' + r_.get('lastName');",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']' + ' Guardians');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardianrefreshtoolClick",
            "designerId": "4c93a74a-82d8-4876-8857-4cf5aaca07c2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardianprofileformeditbutton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onOnlyguardianprofileformeditbuttonClick",
                "implHandler": [
                    "debugger;",
                    "",
                    "if( this.userRole === 'ROLE_SCHOOL' || this.userRole === 'ROLE_ADMIN'){",
                    "\tvar myForm = this.getOnlyGuardianForm();",
                    "\tvar myFields = myForm.getForm().getFields();",
                    "\tfor( var i = 0; i < myFields.length; i++ )",
                    "\t{",
                    "\t\tmyFields.items[i].enable();",
                    "\t}",
                    "\t//myForm.getForm().focus();studentprofileformeditbutton",
                    "\tvar cancelButton\t= button.up().down('#onlyguardianprofileformcanelbutton');",
                    "\tvar saveButton\t\t= button.up().down('#onlyguardianprofileformsavebutton');",
                    "\tcancelButton.enable();",
                    "\tsaveButton.enable();",
                    "\tbutton.disable();",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardianprofileformeditbuttonClick",
            "designerId": "19ef753e-9731-4bd5-8196-2134f82e3efb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardianprofileformcanelbutton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onOnlyguardianprofileformcanelbuttonClick",
                "implHandler": [
                    "var myForm = this.getOnlyGuardianForm();",
                    "var myFields = myForm.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "\tmyFields.items[i].disable();",
                    "}",
                    "//myForm.getForm().focus();",
                    "//var cancelButton\t= button.up().down('#onlyguardianprofileformcanelbutton');",
                    "var saveButton\t\t= button.up().down('#onlyguardianprofileformsavebutton');",
                    "var editButton\t\t= button.up().down('#onlyguardianprofileformeditbutton');",
                    "editButton.enable();",
                    "saveButton.disable();",
                    "button.disable();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardianprofileformcanelbuttonClick",
            "designerId": "22035fb6-2699-431c-b5c8-e409d73b51ac"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardianprofileformsavebutton",
                "designer|targetType": "Ext.button.Button",
                "fn": "onOnlyguardianprofileformsavebuttonClick",
                "implHandler": [
                    "debugger;",
                    "var myForm = this.getOnlyGuardianForm();",
                    "var myFields = myForm.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "\tmyFields.items[i].disable();",
                    "}",
                    "//myForm.getForm().focus();",
                    "var cancelButton\t= button.up().down('#onlyguardianprofileformcanelbutton');",
                    "//var saveButton\t\t= button.up().down('#onlyguardianprofileformsavebutton');",
                    "var editButton\t\t= button.up().down('#onlyguardianprofileformeditbutton');",
                    "editButton.enable();",
                    "cancelButton.disable();",
                    "button.disable();",
                    "this.saveOnlyGuardianProfileForm();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardianprofileformsavebuttonClick",
            "designerId": "7df018ce-5905-406f-b4a1-40b090ec93f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyfguardiansavetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onOnlyfguardiansavetoolClick",
                "implHandler": [
                    "window.console.log( \"guardian.GuardianProfileStore.Save\" );",
                    "debugger;",
                    "",
                    "if( this.userRole === 'ROLE_SCHOOL' || this.userRole === 'ROLE_ADMIN'){",
                    "\tvar mystore = Ext.getStore(\"guardian.GuardianProfileStore\");",
                    "",
                    "\tvar records = mystore.getModifiedRecords();",
                    "\tfor( var i = 0; i < records.length; i++ )",
                    "\t{",
                    "\t\trecords[i].set( 'lastUpdated', new Date() );",
                    "\t\trecords[i].set( 'whoUpdated', 'login');",
                    "\t}",
                    "",
                    "\tmystore.sync();",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyfguardiansavetoolClick",
            "designerId": "e0b28716-eabe-4f1e-93ab-2fd056efc650"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardiannewtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onOnlyguardiannewtoolClick",
                "implHandler": [
                    "debugger;",
                    "",
                    "var guardianStore = Ext.getStore('guardian.GuardianProfileStore');",
                    "var guardianTypesStore = Ext.getStore('guardian.GuardianTypeStore');",
                    "guardianTypesStore.myLoad();",
                    "",
                    "if( this.userRole === 'ROLE_ADMIN' || this.userRole === 'ROLE_SCHOOL' ){",
                    "\tvar newDialog = Ext.create( 'MySchool.view.guardian.NewDialog' );",
                    "",
                    "\twindow.console.log( 'New Guardian Dialog' );",
                    "",
                    "\tnewDialog.render( Ext.getBody() );",
                    "\tnewDialog.show();",
                    "}",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardiannewtoolClick",
            "designerId": "813566f1-0cfd-4b4f-9c7a-f55f2df33592"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardiancancel",
                "designer|targetType": "Ext.button.Button",
                "fn": "onGuardiancancelClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Cancel New Guardian\" );",
                    "var myForm = button.up().getForm();",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onGuardiancancelClick",
            "designerId": "6ef51288-c2aa-4cb8-9674-3201e9278b1f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardiansubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "onGuardiansubmitClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Submit New Guardian\" );",
                    "var myForm\t\t\t\t\t= button.up().getForm();",
                    "var myPanel\t\t\t\t\t= button.up();",
                    "var myGrid\t\t\t\t\t= this.getOnlyGuardianGridPanel();",
                    "",
                    "//Get the values from the form and insert a new record into the GuardianProfileStore.",
                    "",
                    "var formValues\t\t\t\t= myForm.getValues();",
                    "",
                    "//\tCreate an empty record",
                    "var myRecord\t= Ext.create('MySchool.model.guardian.GuardianProfileModel');",
                    "",
                    "//\tGet the stores that we will need",
                    "",
                    "var firstname\t= formValues.firstname;",
                    "var middlename\t= formValues.middlename;",
                    "var lastname\t= formValues.lastname;",
                    "var phone1\t\t= formValues.phone1;",
                    "var phone2\t\t= formValues.phone2;",
                    "var address1\t= formValues.address1;",
                    "var address2\t= formValues.address2;",
                    "var city\t\t= formValues.city;",
                    "var state\t\t= formValues.state;",
                    "var postalcode\t= formValues.postalcode;",
                    "var country\t\t= formValues.country;",
                    "var email\t\t= formValues.email;",
                    "var username\t= formValues.username;",
                    "",
                    "var type\t\t= formValues.combotype;",
                    "",
                    "var dob\t\t\t= formValues.dob;",
                    "",
                    "",
                    "var myStore\t\t= this.getStore( 'guardian.GuardianProfileStore' );",
                    "",
                    "//debugger;",
                    "",
                    "",
                    "myRecord.set( 'id', null );",
                    "//myRecord.set( 'version', null );",
                    "",
                    "myRecord.set('whoUpdated', 'login');",
                    "myRecord.set('lastUpdated', new Date());",
                    "myRecord.set('email', email );",
                    "myRecord.set('firstName', firstname );",
                    "myRecord.set('middleName', middlename );",
                    "myRecord.set('lastName', lastname);",
                    "myRecord.set('phone1', phone1 );",
                    "myRecord.set('phone2', phone2 );",
                    "myRecord.set('address1', address1);",
                    "myRecord.set('address2', address2);",
                    "myRecord.set('city', city);",
                    "myRecord.set('province', state);",
                    "myRecord.set('postalCode',postalcode);",
                    "myRecord.set('country',country);",
                    "myRecord.set('userName',username);",
                    "",
                    "myRecord.set('enabled', true);",
                    "myRecord.set('dob', dob);",
                    "",
                    "myRecord.set('type', type);",
                    "",
                    "//add to the store",
                    "",
                    "myStore.add( myRecord );",
                    "",
                    "//sync the store.",
                    "myStore.sync();",
                    "",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onGuardiansubmitClick",
            "designerId": "8006faa7-b809-4cc3-980a-adeb5b8337eb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardianprofiletab",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onGuardianprofiletabActivate",
                "implHandler": [
                    "debugger;",
                    "//subjectsgrid",
                    "// catch the tab activate but only reload if we have processed",
                    "// the viewready indicated by this.gridViewReady",
                    "console.log('tab.activate()');",
                    "",
                    "if ( Ext.isDefined( this.gridViewReady  ) ) {",
                    "    //var g_ = Ext.ComponentQuery.query(\"#subjectsgrid\")[0];",
                    "\tvar g_ = this.getOnlyGuardianGridPanel();",
                    "",
                    "    g_.getStore().reload();",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onGuardianprofiletabActivate",
            "designerId": "6a39d452-d70b-4fb2-87ab-34d9db38bd72"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#onlyguardiannewchildtool",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyTool26",
                "fn": "onOnlyguardiannewchildtoolClick",
                "implHandler": [
                    "debugger;",
                    "",
                    "if( this.userRole === 'ROLE_SCHOOL' || this.userRole === 'ROLE_ADMIN'){",
                    "\tvar guardianStore = Ext.getStore('guardian.GuardianProfileStore');",
                    "\tvar guardianTypesStore = Ext.getStore('guardian.GuardianTypeStore');",
                    "\tguardianTypesStore.myLoad();",
                    "",
                    "\tif( this.userRole === 'ROLE_ADMIN' || this.userRole === 'ROLE_SCHOOL'){",
                    "\t\tvar newDialog = Ext.create( 'MySchool.view.guardian.AddChildDialog' );",
                    "",
                    "\t\twindow.console.log( 'Associate Student to Guardian Dialog' );",
                    "",
                    "\t\tnewDialog.render( Ext.getBody() );",
                    "\t\tnewDialog.show();",
                    "\t}",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOnlyguardiannewchildtoolClick",
            "designerId": "94a8eaf0-d346-4cac-91d7-9a95532633d0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardianonlygridpanel",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "guardian.ProfileGridGuardianOnlyPanel",
                "fn": "onGuardianonlygridpanelSelectionChange",
                "implHandler": [
                    "debugger;",
                    "console.log('onGuardianonlygridpanelSelectionChange()');",
                    "// in the onMyJsonStoreLoad we do a deselect so we need to test",
                    "// if selected[0] has a value",
                    "var record = model.getLastSelected();",
                    "if ( Ext.isDefined( selected  ) && Ext.isDefined( selected[0]  )) {",
                    "    var myForm = this.getOnlyGuardianForm();",
                    "",
                    "    this.loadForm( myForm, record );",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGuardianonlygridpanelSelectionChange",
            "designerId": "17dc55fa-ad4e-4214-a2f5-e879396da4a7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardianaddchildcancel",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton44",
                "fn": "onGuardianaddchildcancelClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Cancel Associate Student to Guadian\" );",
                    "var myForm = button.up().getForm();",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onGuardianaddchildcancelClick",
            "designerId": "4f563c24-426b-4314-b191-a80d61bef8ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#guardianaddchildsubmit",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton45",
                "fn": "onGuardianaddchildsubmitClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Submit Associate Student to Guardian\" );",
                    "var myForm\t\t\t\t\t= button.up().getForm();",
                    "var myPanel\t\t\t\t\t= button.up();",
                    "var myGrid\t\t\t\t\t= this.getOnlyGuardianGridPanel();",
                    "",
                    "//Get the values from the form and insert a new record into the GuardianProfileStore.",
                    "",
                    "var formValues\t\t\t\t= myForm.getValues();",
                    "",
                    "//\tGet an empty record",
                    "//var myRecord\t= myGrid.getSelectionModel().getSelection()[0];",
                    "var myRecord\t= myGrid.getSelectionModel().getLastSelected();",
                    "//var myRecord\t= Ext.create('MySchool.model.guardian.GuardianProfileModel');",
                    "",
                    "//\tGet the stores that we will need",
                    "",
                    "var username\t= formValues.username;",
                    "",
                    "var myStore\t\t= this.getStore( 'guardian.GuardianProfileStore' );",
                    "",
                    "//debugger;",
                    "",
                    "//myRecord.set( 'quardianId', myRecord.get('guardianId') );",
                    "myRecord.set( 'studentUserName', username );",
                    "myRecord.set( 'id', null );",
                    "",
                    "//add to the store.  For a normal update, only the sync() is called.",
                    "//In this case we are expecting the create method on the backend to",
                    "//perform an update instead of a create.  This will allow updated from",
                    "//the grid to work as expected while allowing us to add a new student",
                    "//child to the existing guardian relation.  This will actually create",
                    "//another record in the guardian table with the new studentId.",
                    "//The backend checks to see if the studentId in this records is",
                    "//different from the one with the specified studentUserName.  If so,",
                    "//then the new record will be created.",
                    "myStore.add( myRecord );",
                    "",
                    "//sync the store.",
                    "myStore.sync();",
                    "",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onGuardianaddchildsubmitClick",
            "designerId": "1762fcb1-794b-48e1-a9c0-285a1fa50a66"
        }
    ]
}