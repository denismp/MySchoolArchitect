{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "dailycontroller",
        "designer|userClassName": "daily.MyController",
        "id": null,
        "models": [
            "daily.DailyModel"
        ],
        "stores": [
            "daily.MyJsonStore",
            "subject.SubjectStore",
            "student.StudentStore"
        ]
    },
    "designerId": "cc725caa-3895-4141-9f43-9ec30a87de9d",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#editdailyhourstab",
                "designer|targetType": "Ext.button.Button",
                "fn": "onEditdailyhourstabClick",
                "implHandler": [
                    "this.buttonHandler( button, e, eOpts );"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onEditdailyhourstabClick",
            "designerId": "8227d284-457d-4764-a8dd-946ae377934d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "o",
                    "event",
                    "eOpts"
                ],
                "fn": "blurHandler",
                "implHandler": [
                    "//debugger;",
                    "var p_\t\t\t= o.up('form').up('panel');",
                    "var myForm\t\t= o.up('form');",
                    "//var topP_\t\t= p_.up('panel');",
                    "var pItemId_\t= p_.getItemId();",
                    "var edit_\t\t= p_.down('#edit' + pItemId_);",
                    "var myTitle\t\t= p_.title;",
                    "console.log( edit_ );",
                    "//console.log( topP_ );",
                    "console.log( myForm );",
                    "console.log( \"pItemId_=\" + pItemId_);",
                    "//var myController = this;",
                    "",
                    "console.log( 'title=' + myTitle );",
                    "",
                    "//topP_.buttonHandler(edit_);",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Save Changes?',",
                    "    //msg: 'Would you like to save your changes to ' + pItemId_ + ' ?',",
                    "    msg: 'Would you like to save your changes to ' + myTitle + ' ?',",
                    "    buttons: Ext.Msg.YESNO,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(buttonId) {",
                    "        var mystore\t\t= Ext.getStore(\"daily.MyJsonStore\");",
                    "        if (buttonId == 'yes') {",
                    "            Ext.Msg.show({",
                    "                title: 'Save',",
                    "                msg: 'record saved',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.window.MessageBox.INFO",
                    "            });",
                    "            //debugger;",
                    "",
                    "            var myTextArea\t= myForm.down('textareafield');",
                    "            var myName\t\t= myTextArea.getName();",
                    "            var myValue\t\t= myTextArea.getValue();",
                    "            var record\t\t= myForm.getRecord();",
                    "            record.set( myName, myValue );",
                    "            record.set( 'lastUpdated', new Date() );",
                    "            record.set( 'whoUpdated', 'login' );",
                    "",
                    "            mystore.sync();",
                    "        }",
                    "        else {",
                    "            Ext.Msg.show({",
                    "                title: 'Cancel',",
                    "                msg: 'record restored',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.window.MessageBox.INFO",
                    "            });",
                    "            mystore.reload();",
                    "        }",
                    "",
                    "    }",
                    "});",
                    "//debugger;",
                    "this.buttonHandler( edit_ );"
                ]
            },
            "name": "blurHandler",
            "designerId": "7cdfdf47-4058-452e-9f13-c1402aa55b2f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailyrefreshtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailyrefreshtoolClick",
                "implHandler": [
                    "var myStore = Ext.getStore('daily.MyJsonStore');",
                    "var myGrid = this.getDailyGridPanel();",
                    "myGrid.removeAll();",
                    "myStore.reload();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailyrefreshtoolClick",
            "designerId": "fe778c87-7a5e-442a-92b7-b8046bcbbd66"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailysearchtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailysearchtoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailysearchtoolClick",
            "designerId": "9290a015-8d82-4806-9b1a-223203da7f00"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailynewtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailynewtoolClick",
                "implHandler": [
                    "//debugger;",
                    "",
                    "var studentStore\t\t\t\t= Ext.getStore('student.StudentStore');",
                    "//var subjectStore\t\t\t\t= Ext.getStore('subject.SubjectStore');",
                    "//var commonQuarterSubjectStore\t= Ext.getStore('common.QuarterSubjectStore');",
                    "//var commonMonthStore\t\t\t= Ext.getStore('common.MonthStore');",
                    "//var securityStore\t\t\t\t= Ext.getStore('security.SecurityStore');",
                    "",
                    "debugger;",
                    "var securityStore\t\t\t\t= Ext.getStore('security.SecurityStore');",
                    "var commonMonthStore\t\t\t= Ext.getStore('common.MonthStore');",
                    "var myGrid\t\t\t\t\t\t= this.getDailyGridPanel();",
                    "var gridModel\t\t\t\t\t= myGrid.getSelectionModel();",
                    "var selectedRecord\t\t\t\t= gridModel.getSelection()[0];",
                    "",
                    "var securityRecord\t\t\t\t= securityStore.getAt(0);",
                    "this.userName = securityRecord.get('userName');",
                    "this.userRole = securityRecord.get('userRole');",
                    "",
                    "//var studentRecord\t= studentStore.getAt(0);",
                    "var studentId;",
                    "var studentName;",
                    "if( typeof selectedRecord !== 'undefined')",
                    "{",
                    "\tstudentId\t\t= selectedRecord.get( 'studentId' );",
                    "\tstudentName\t\t= selectedRecord.get( 'studentUserName' );",
                    "}",
                    "else",
                    "{",
                    "\t// this is the very first record",
                    "\tif( this.userRole === 'ROLE_USER')",
                    "\t{",
                    "\t\t// Find the login userName from the student store.",
                    "\t\tvar studentRecord = studentStore.findRecord('userName', this.userName );",
                    "\t\tstudentId = studentRecord.get('studentId');",
                    "\t\tstudentName = this.userName;",
                    "\t}",
                    "\telse",
                    "\t{",
                    "\t\t// The faculty or admin is going to have to enter it.",
                    "\t\tstudentId = 0;",
                    "\t\tstudentName = \"Select one.\";",
                    "\t}",
                    "}",
                    "",
                    "var newDialog = Ext.create( 'MySchool.view.daily.NewDailyForm' );",
                    "",
                    "if( this.userRole !== 'ROLE_USER')",
                    "{",
                    "\tnewDialog.down('#daily-studentname').setReadOnly( false );",
                    "}",
                    "else",
                    "{",
                    "\tnewDialog.down('#daily-studentname').setReadOnly( true );",
                    "}",
                    "newDialog.down('#daily-studentid').setValue( studentId );",
                    "newDialog.down('#daily-studentname').setValue( studentName );",
                    "commonMonthStore.myLoad();",
                    "",
                    "window.console.log( 'New Daily Dialog' );",
                    "",
                    "newDialog.render( Ext.getBody() );",
                    "newDialog.show();",
                    "",
                    "/*",
                    "if( this.userRole === 'ROLE_USER')",
                    "{",
                    "\tvar studentRecord\t= studentStore.getAt(0);",
                    "\tvar studentId\t\t= studentRecord.get( 'id' );",
                    "\tvar studentName\t\t= studentRecord.get( 'userName' );",
                    "",
                    "\tvar newDialog = Ext.create( 'MySchool.view.daily.NewDailyForm' );",
                    "",
                    "\tnewDialog.down('#daily-studentid').setValue( studentId );",
                    "\tnewDialog.down('#daily-studentname').setValue( studentName );",
                    "",
                    "\t//commonQuarterSubjectStore.myLoad();",
                    "\tcommonMonthStore.myLoad();",
                    "",
                    "\twindow.console.log( 'New Daily Dialog' );",
                    "",
                    "\tnewDialog.render( Ext.getBody() );",
                    "\tnewDialog.show();",
                    "}",
                    "*/"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailynewtoolClick",
            "designerId": "91893362-d4ef-4433-ac0e-03ced7607173"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailysavetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailysavetoolClick",
                "implHandler": [
                    "window.console.log( \"daily.MyController.Save\" );",
                    "debugger;",
                    "",
                    "var mystore = Ext.getStore(\"daily.MyJsonStore\");",
                    "",
                    "var records = mystore.getModifiedRecords();",
                    "for( var i = 0; i < records.length; i++ )",
                    "{",
                    "    records[i].set( 'lastUpdated', new Date() );",
                    "    records[i].set( 'whoUpdated', 'login');",
                    "}",
                    "",
                    "mystore.sync();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailysavetoolClick",
            "designerId": "0bfb34a3-a4f5-496e-b649-8eef8d54a483"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailydeletetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailydeletetoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailydeletetoolClick",
            "designerId": "e7f7746f-f711-41dd-b520-7250834f32cb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailylocktool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onDailylocktoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailylocktoolClick",
            "designerId": "fd2a4fd4-698c-4c72-b17a-27aaafb7bffa"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button, e, eOpts"
                ],
                "fn": "buttonHandler",
                "implHandler": [
                    "debugger;",
                    "window.console.log(button);",
                    "var b_\t\t= button;",
                    "var form\t= b_.up('panel');",
                    "var p_\t\t= form.up();",
                    "var pItemId_ = p_.getItemId();",
                    "var field_;",
                    "",
                    "if (pItemId_ == 'dailyhourstab') {",
                    "    field_ = p_.down('numberfield');",
                    "} else {",
                    "    field_ = p_.down('textareafield');",
                    "}",
                    "",
                    "if (b_.getText().charAt(0) == 'D') {",
                    "    b_ = p_.down('#edit' + pItemId_);",
                    "    b_.setText('Edit');",
                    "    b_.setDisabled(false);",
                    "    field_.setDisabled(true);",
                    "} else {",
                    "    b_.setText('Done');",
                    "    field_.setDisabled(false);",
                    "    field_.focus();",
                    "}"
                ]
            },
            "name": "buttonHandler",
            "designerId": "be386d5e-4d0c-447d-9b02-840ae07841f4"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "this.control({",
                    "    \"#editdailytesttabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailytesttabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailyresourcesusedtabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailyresourcesusedtabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailystudydetailstabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailystudydetailstabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailydetailsevaluationtabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailydetailsevaluationtabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailydetailscorrectiontabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailydetailscorrectiontabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailydetailsactionstabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailydetailsactionstabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    },",
                    "    \"#editdailydetailscommentstabpanel\": {",
                    "        click: this.buttonHandler",
                    "    },",
                    "    \"#dailydetailscommentstabpaneltextbox\": {",
                    "        blur: this.blurHandler",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "init",
            "designerId": "136da0e8-8283-4d19-b956-df5b8910590f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailygridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onDailygridpanelSelectionChange",
                "implHandler": [
                    "debugger;",
                    "// in the onMyJsonStoreLoad we do a deselect so we need to test",
                    "// if selected[0] has a value",
                    "if ( Ext.isDefined( selected  ) && Ext.isDefined( selected[0]  )) {",
                    "    var tabPanel = this.getDailyResourcesUsedTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'resourcesUsed' );",
                    "    tabPanel = this.getDailyStudyDetailsTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'studyDetails' );",
                    "    tabPanel = this.getDailyDetailsEvaluationTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'evaluation' );",
                    "    tabPanel = this.getDailyDetailsCorrectionTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'correction' );",
                    "    tabPanel = this.getDailyDetailsActionsTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'dailyAction' );",
                    "    tabPanel = this.getDailyCommentsTabPanel();",
                    "        console.log( tabPanel );",
                    "    this.loadTabPanelForm( tabPanel, selected, 'comments' );",
                    "",
                    "    console.log('onDailygridpanelSelectionChange()');",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onDailygridpanelSelectionChange",
            "designerId": "0618fe22-9b90-49ff-8221-68c9463c2fef"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailygridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onDailygridpanelViewReady",
                "implHandler": [
                    "debugger;",
                    "console.log('onDailygridpanelViewReady()');",
                    "var myStore = Ext.getStore('daily.MyJsonStore');",
                    "var myStudentStore = Ext.getStore('student.StudentStore');",
                    "var securityStore = Ext.getStore('security.SecurityStore');",
                    "var securityRecord = securityStore.getAt(0);",
                    "var studentRecord = myStudentStore.getAt(0);",
                    "",
                    "this.userName = securityRecord.get('userName');",
                    "this.userRole = securityRecord.get('userRole');",
                    "var myGrid = this.getDailyGridPanel();",
                    "var studentName_;",
                    "",
                    "//        debugger",
                    "if ( typeof( studentRecord ) != \"undefined\" )",
                    "{",
                    "\tif( this.userRole !== 'ROLE_USER')",
                    "\t{",
                    "\t\tstudentName_ = this.userName + '/' + this.userRole;",
                    "\t\tmyGrid.setTitle('[' + studentName_ + ']');",
                    "\t\tmyStore.load({",
                    "\t\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\t\tscope: this",
                    "\t\t});",
                    "\t}",
                    "\telse",
                    "\t{",
                    "\t\tstudentName_ = studentRecord.get('firstName') + \" \" + studentRecord.get('middleName') + ' ' + studentRecord.get('lastName');",
                    "\t\t//MonthlyDetailsGridPanel",
                    "\t\t//var myGrid = Ext.ComponentQuery.query(\"#bodiesofworkssubjectsgrid\")[0];",
                    "\t\t//var myGrid = this.getDailyGridPanel();",
                    "",
                    "\t\tmyGrid.setTitle('[' + studentName_ + ']');",
                    "\t\tmyStore.load({",
                    "\t\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\t\tscope: this,",
                    "\t\t\tparams: {",
                    "\t\t\t\tstudentName: studentRecord.get('userName'),",
                    "\t\t\t\tstudentId: studentRecord.get('studentId')",
                    "\t\t\t}",
                    "\t\t});",
                    "\t}",
                    "",
                    "}",
                    "else",
                    "{",
                    "\tstudentName_ = this.userName + '/' + this.userRole;",
                    "\tmyGrid.setTitle('[' + studentName_ + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tstudentName: this.userName,",
                    "\t\tscope: this",
                    "\t});\t",
                    "}",
                    "//grid.getSelectionModel().select( 0 );",
                    "//tablepanel.getSelectionModel().select( 0 );",
                    ""
                ],
                "name": "viewready",
                "scope": "me"
            },
            "name": "onDailygridpanelViewReady",
            "designerId": "51167911-33d0-467f-a28e-9b7d04eceaf6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyGridPanel",
                "selector": "#dailygridpanel"
            },
            "name": "DailyGridPanel",
            "designerId": "06052f2e-bc33-458a-8269-c05198769634"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMyJsonStoreLoad",
                "implHandler": [
                    "//debugger;",
                    "//var g_ = Ext.ComponentQuery.query(\"#monthlysummarygridpanel\")[0];",
                    "var g_ = this.getDailyGridPanel();",
                    "",
                    "if (g_.getStore().getCount() > 0) {",
                    "    g_.getSelectionModel().deselectAll();",
                    "    g_.getSelectionModel().select( 0 );",
                    "}",
                    "",
                    "this.gridViewReady = true;"
                ]
            },
            "name": "onMyJsonStoreLoad",
            "designerId": "87071baf-996f-479c-a569-d9d0c38b388b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyResourcesUsedTabPanel",
                "selector": "#dailyresourcesusedtabpanel"
            },
            "name": "DailyResourcesUsedTabPanel",
            "designerId": "353629c2-b9a8-40fa-98a4-e37e84ef8c3f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyStudyDetailsTabPanel",
                "selector": "#dailystudydetailstabpanel"
            },
            "name": "DailyStudyDetailsTabPanel",
            "designerId": "a0143eeb-e7f0-4246-be7b-b50709674f1a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyDetailsEvaluationTabPanel",
                "selector": "#dailydetailsevaluationtabpanel"
            },
            "name": "DailyDetailsEvaluationTabPanel",
            "designerId": "37c0e248-f8e0-4752-b7ee-1b267492feb2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tabPanel",
                    "selected",
                    "fieldname"
                ],
                "fn": "loadTabPanelForm",
                "implHandler": [
                    "debugger;",
                    "var dockedItems = tabPanel.getDockedItems();",
                    "var myForm = dockedItems[0];",
                    "",
                    "if( Ext.isDefined( myForm ) )",
                    "{",
                    "    console.log( myForm );",
                    "    //var textBox = myForm.dockedItems.items[0];",
                    "    var textBox = myForm.down('textareafield');",
                    "    textBox.name = fieldname;",
                    "    myForm.loadRecord( selected[0] );",
                    "}",
                    "else",
                    "{",
                    "    console.log( 'loadTabPanelForm(): No form' );",
                    "    //console.log( tabPanel );",
                    "}"
                ]
            },
            "name": "loadTabPanelForm",
            "designerId": "ce92ed91-667b-4c28-82de-7d2145b47a3c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyDetailsActionsTabPanel",
                "selector": "#dailydetailsactionstabpanel"
            },
            "name": "DailyDetailsActionsTabPanel",
            "designerId": "f6b87f69-ece9-490b-93a2-188f9b28b634"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyCommentsTabPanel",
                "selector": "#dailydetailscommentstabpanel"
            },
            "name": "DailyCommentsTabPanel",
            "designerId": "6ff21a5f-0c00-481d-951b-9219f7ddce31"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "DailyDetailsCorrectionTabPanel",
                "selector": "#dailydetailscorrectiontabpanel"
            },
            "name": "DailyDetailsCorrectionTabPanel",
            "designerId": "624b72bc-73f4-4037-945c-b3a2ac17b7fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailysubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDailysubmitClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Submit New Daily\" );",
                    "var myForm\t\t\t\t\t= button.up().getForm();",
                    "//var newDialog = button.up('monthlynewsummaryformpanel');",
                    "",
                    "//Get the values from the form and insert a new record into the MonthlySummaryView.",
                    "",
                    "var formValues\t\t\t\t= myForm.getValues();",
                    "",
                    "//\tCreate an empty record",
                    "var dailyRecord\t= Ext.create('MySchool.model.daily.DailyModel');",
                    "",
                    "//\tGet the stores that we will need",
                    "var dailyStore\t\t= this.getStore( 'daily.MyJsonStore' );",
                    "",
                    "//var studentStore = Ext.getStore('student.StudentStore');",
                    "var subjectStore = Ext.getStore( 'subject.SubjectStore' );",
                    "",
                    "//\tGet the student info",
                    "//var studentRecord\t= studentStore.getAt(0);",
                    "//var studentId\t\t= studentRecord.get( 'id' );",
                    "//var studentName\t\t= studentRecord.get( 'userName' );",
                    "",
                    "//\tGet the quarterSubject record from the form.",
                    "var quarterSubjectId\t\t= formValues.comboquartersubject;",
                    "var quarterSubjectRecord;",
                    "for( var i = 0; i < subjectStore.count(); i++ )",
                    "{",
                    "    if( subjectStore.getAt(i).get('id') === quarterSubjectId )",
                    "    {",
                    "        quarterSubjectRecord = subjectStore.getAt(i);",
                    "        break;",
                    "    }",
                    "}",
                    "",
                    "if( typeof quarterSubjectRecord !== 'undefined')",
                    "{",
                    "    //\tGet the other information that we need for the new record.",
                    "    var subjName\t= quarterSubjectRecord.get('subjName');",
                    "    var subjId\t\t= quarterSubjectRecord.get('subjId');",
                    "    var qtrName\t\t= quarterSubjectRecord.get('qtrName');",
                    "    var qtrId\t\t= quarterSubjectRecord.get('qtrId');",
                    "    var qtrYear\t\t= quarterSubjectRecord.get('qtrYear');",
                    "    //var month_number = formValues.combomonth;",
                    "",
                    "    //var allSubjRec_ = myAllSubjStore.findRecord( 'subjName', subjName );",
                    "    //var subjId_ = allSubjRec_.get( 'subjId' );",
                    "",
                    "",
                    "    //Add the data to the new record.",
                    "    if( formValues.combomonth > 0 )",
                    "    {",
                    "        dailyRecord.set('daily_month', formValues.combomonth);",
                    "        dailyRecord.set('daily_day', formValues.daily_day);",
                    "        dailyRecord.set('daily_hours', 0);",
                    "",
                    "        dailyRecord.set('subjName', subjName );",
                    "        dailyRecord.set('subjId', subjId );",
                    "        dailyRecord.set('qtrName', qtrName );",
                    "        dailyRecord.set('qtrId', qtrId);",
                    "        dailyRecord.set('studentId', formValues.studentId);",
                    "        dailyRecord.set('studentUserName', formValues.studentUserName);",
                    "        //dailyRecord.set('qtrYear', qtrYear);",
                    "        dailyRecord.set('daily_year', qtrYear );",
                    "        dailyRecord.set('locked', 0 );",
                    "        dailyRecord.set('resourcesUsed', formValues.resourcesUsed);",
                    "        dailyRecord.set('studyDetails', formValues.studyDetails);",
                    "        dailyRecord.set('evaluation', formValues.evaluation);",
                    "        dailyRecord.set('correction', formValues.correction);",
                    "        dailyRecord.set('dailyAction', formValues.dailyAction);",
                    "        dailyRecord.set('comments', formValues.comments);",
                    "",
                    "        dailyRecord.set('whoUpdated', 'login');",
                    "        dailyRecord.set('lastUpdated', new Date());",
                    "        dailyRecord.set('version', null);",
                    "        dailyRecord.set( 'dailyId', 0 );",
                    "",
                    "        //add to the store",
                    "",
                    "        dailyStore.add( dailyRecord );",
                    "",
                    "        //sync the store.",
                    "        dailyStore.sync();",
                    "",
                    "        myForm.reset();",
                    "        button.up().hide();",
                    "    }",
                    "    else",
                    "    {",
                    "        var smsg = \"You must enter a value for month\";",
                    "        Ext.MessageBox.show({",
                    "            title: 'REMOTE EXCEPTION',",
                    "            msg: smsg,",
                    "            icon: Ext.MessageBox.ERROR,",
                    "            buttons: Ext.Msg.OK",
                    "        });",
                    "    }",
                    "}",
                    "else",
                    "{",
                    "    var msg = \"You must have student/faculty/subject/quarter records.\";",
                    "            Ext.MessageBox.show({",
                    "            title: 'NO DATA',",
                    "            msg: smsg,",
                    "            icon: Ext.MessageBox.ERROR,",
                    "            buttons: Ext.Msg.OK",
                    "        });",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailysubmitClick",
            "designerId": "17b329b9-8ab0-478e-ad5d-1a0a1ab0a1fd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dailycancel",
                "designer|targetType": "Ext.button.Button",
                "fn": "onDailycancelClick",
                "implHandler": [
                    "//debugger;",
                    "window.console.log( \"Cancel New Daily\" );",
                    "var myForm = button.up().getForm();",
                    "myForm.reset();",
                    "button.up().hide();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onDailycancelClick",
            "designerId": "5b6d7759-1358-41b2-86ca-f1aefad2f0e0"
        }
    ]
}