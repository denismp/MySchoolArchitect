{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "school.SchoolProfileViewController",
        "stores": [
            "school.SchoolProfileStore",
            "subject.SchoolsStore",
            "admin.AdminStore"
        ]
    },
    "designerId": "afd0d89f-ed12-49d1-95dd-130f9459d308",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "SchoolProfileForm",
                "selector": "#schoolprofileform"
            },
            "name": "SchoolProfileForm",
            "designerId": "abf6b5ad-7965-4d5b-bce5-a8a3f0de3e9d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "SchoolGridPanel",
                "selector": "#schoolprofilesgridpanel"
            },
            "name": "SchoolGridPanel",
            "designerId": "e1202e8f-c724-4f86-8e70-95e51ef4aa9d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "form",
                    "selected"
                ],
                "fn": "loadForm",
                "implHandler": [
                    "debugger;",
                    "",
                    "console.log( form );",
                    "",
                    "form.loadRecord( selected[0] );",
                    "",
                    "var myFields = form.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "    myFields.items[i].disable();",
                    "}",
                    "console.log('school.SchoolViewController.loadForm(): completed');"
                ]
            },
            "name": "loadForm",
            "designerId": "e36c9941-7f08-4e06-8ade-5e30a562a320"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMyJsonStoreLoad",
                "implHandler": [
                    "//debugger;",
                    "//var g_ = Ext.ComponentQuery.query(\"#monthlysummarygridpanel\")[0];",
                    "var g_ = this.getSchoolGridPanel();",
                    "",
                    "if (g_.getStore().getCount() > 0) {",
                    "    g_.getSelectionModel().deselectAll();",
                    "    g_.getSelectionModel().select( 0 );",
                    "}",
                    "",
                    "this.gridViewReady = true;"
                ]
            },
            "name": "onMyJsonStoreLoad",
            "designerId": "e8434687-8a7a-4e73-af4f-9cd7feb03241"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveProfileForm",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Save School Profile Form\" );",
                    "//var myForm\t\t\t\t\t= button.up().getForm();",
                    "var myForm = this.getSchoolProfileForm();",
                    "",
                    "",
                    "//\tGet the stores that we will need",
                    "var myStore\t\t= this.getStore( 'school.SchoolProfileStore' );",
                    "",
                    "//var rForm = myForm.getForm();",
                    "",
                    "//var formValues1\t= myForm.getValues();",
                    "//var formValues\t= myForm.getForm().getValues();",
                    "var formFields\t= myForm.getForm().getFields();",
                    "//var name\t= formFields.items[0].name;",
                    "//var value\t= formFields.items[0].lastValue;",
                    "//var test\t= this.getFormValue( formFields, 'middleName');",
                    "//debugger;",
                    "",
                    "//\tCreate the form record.",
                    "var myRecord\t= myForm.getRecord();",
                    "",
                    "myRecord.set('firstName', this.getFormValue( formFields, 'firstName' ) );",
                    "myRecord.set('middleName', this.getFormValue( formFields, 'middleName' ));",
                    "myRecord.set('lastName', this.getFormValue( formFields, 'lastName' ));",
                    "myRecord.set('phone1', this.getFormValue( formFields, 'phone1' ));",
                    "myRecord.set('phone2', this.getFormValue( formFields, 'phone2' ));",
                    "myRecord.set('address1', this.getFormValue( formFields, 'address1' ));",
                    "myRecord.set('address2', this.getFormValue( formFields, 'address2' ));",
                    "myRecord.set('city', this.getFormValue( formFields, 'city' ));",
                    "myRecord.set('province', this.getFormValue( formFields, 'province' ));",
                    "myRecord.set('postalCode', this.getFormValue( formFields, 'postalCode' ));",
                    "myRecord.set('country', this.getFormValue( formFields, 'country' ));",
                    "myRecord.set('email', this.getFormValue( formFields, 'email' ));",
                    "myRecord.set('dob', this.getFormValue( formFields, 'dob' ));",
                    "",
                    "myRecord.set('whoUpdated', 'login');",
                    "myRecord.set('lastUpdated', new Date());",
                    "",
                    "debugger;",
                    "",
                    "//sync the store.",
                    "myStore.sync();"
                ]
            },
            "name": "saveProfileForm",
            "designerId": "1177a2a6-3838-45b8-bfe9-dc4b431bd0c5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "formFields",
                    "name"
                ],
                "fn": "getFormValue",
                "implHandler": [
                    "//var name\t= formFields.items[0].name;",
                    "//var value\t= formFields.items[0].lastValue;",
                    "for( var i = 0; i < formFields.length; i++ )",
                    "{",
                    "    if( formFields.items[i].name === name )",
                    "    {",
                    "        return formFields.items[i].lastValue;",
                    "    }",
                    "}",
                    "return \"\";"
                ]
            },
            "name": "getFormValue",
            "designerId": "138519dd-bfd5-4b07-888d-8302badab9b5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofilesgridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onSchoolprofilesgridpanelViewReady",
                "implHandler": [
                    "debugger;",
                    "console.log('onSchoolprofilesgridpanelViewReady()');",
                    "var myStore = Ext.getStore('school.SchoolProfileStore');",
                    "",
                    "var securityStore = Ext.getStore('security.SecurityStore');",
                    "var securityRecord = securityStore.getAt(0);",
                    "this.userName = securityRecord.get('userName');",
                    "this.userRole = securityRecord.get('userRole');",
                    "var ss_ = Ext.getStore('student.StudentStore');",
                    "",
                    "var studentName_;",
                    "",
                    "",
                    "var r_ = ss_.getAt(0);",
                    "var title;",
                    "var myGrid = this.getSchoolGridPanel();",
                    "",
                    "",
                    "if( this.userRole === 'ROLE_FACULTY'){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}",
                    "else if( this.userRole === 'ROLE_ADMIN' || this.userRole === 'ROLE_SCHOOL' ){",
                    "\ttitle = this.userName + '/' + this.userRole;",
                    "",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this",
                    "\t});",
                    "}",
                    "else{",
                    "\ttitle = r_.get('firstName') + \" \" + r_.get('middleName') + ' ' + r_.get('lastName');",
                    "",
                    "\tmyGrid.setTitle('[' + title + ']' + ' Guardians');",
                    "\tmyStore.load({",
                    "\t\tcallback: this.onMyJsonStoreLoad,",
                    "\t\tscope: this,",
                    "\t\tparams: {",
                    "\t\t\tstudentName: this.userName",
                    "\t\t}",
                    "\t});",
                    "}"
                ],
                "name": "viewready",
                "scope": "me"
            },
            "name": "onSchoolprofilesgridpanelViewReady",
            "designerId": "cdb23ada-d577-47f9-b802-8e3a2364a6a7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofilesgridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onSchoolprofilesgridpanelSelectionChange",
                "implHandler": [
                    "debugger;",
                    "// in the onMyJsonStoreLoad we do a deselect so we need to test",
                    "// if selected[0] has a value",
                    "if ( Ext.isDefined( selected  ) && Ext.isDefined( selected[0]  )) {",
                    "    var myForm = this.getSchoolProfileForm();",
                    "",
                    "    this.loadForm( myForm, selected );",
                    "",
                    "",
                    "    console.log('onSchoolprofilesgridpanelSelectionChanged()');",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onSchoolprofilesgridpanelSelectionChange",
            "designerId": "381413d3-80be-413b-9a7a-e0d58c3d04df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolrefreshtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onSchoolrefreshtoolClick",
                "implHandler": [
                    "debugger;",
                    "var myStore = Ext.getStore('school.SchoolProfileStore');",
                    "myStore.reload();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolrefreshtoolClick",
            "designerId": "e4e42f67-9fdc-41a1-9ac7-a68d68e2b42e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolsavetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onSchoolsavetoolClick",
                "implHandler": [
                    "window.console.log( \"school.SchoolProfileStore.Save\" );",
                    "debugger;",
                    "",
                    "var mystore = Ext.getStore(\"school.SchoolProfileStore\");",
                    "",
                    "var records = mystore.getModifiedRecords();",
                    "for( var i = 0; i < records.length; i++ )",
                    "{",
                    "    records[i].set( 'lastUpdated', new Date() );",
                    "    records[i].set( 'whoUpdated', 'login');",
                    "}",
                    "",
                    "mystore.sync();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolsavetoolClick",
            "designerId": "25f4a668-8eec-426c-8fb1-072df1e7ad9d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofiletab",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onSchoolprofiletabActivate",
                "implHandler": [
                    "debugger;",
                    "//subjectsgrid",
                    "// catch the tab activate but only reload if we have processed",
                    "// the viewready indicated by this.gridViewReady",
                    "console.log('tab.activate()');",
                    "",
                    "if ( Ext.isDefined( this.gridViewReady  ) ) {",
                    "    //var g_ = Ext.ComponentQuery.query(\"#subjectsgrid\")[0];",
                    "\tvar g_ = this.getSchoolGridPanel();",
                    "",
                    "    g_.getStore().reload();",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onSchoolprofiletabActivate",
            "designerId": "4f33768f-3d10-4e8d-b0ee-f2a89348da9e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolnewtool",
                "designer|targetType": "MyTool15",
                "fn": "onSchoolnewtoolClick",
                "implHandler": [
                    "debugger;",
                    "",
                    "//var schoolStore = Ext.getStore('school.SchoolProfileStore');",
                    "//var guardianTypesStore = Ext.getStore('guardian.GuardianTypeStore');",
                    "//guardianTypesStore.myLoad();",
                    "",
                    "if( this.userRole === 'ROLE_ADMIN' || this.userRole === 'ROLE_SCHOOL' ){",
                    "\tvar newDialog = Ext.create( 'MySchool.view.school.NewDialog' );",
                    "",
                    "\twindow.console.log( 'New School Dialog' );",
                    "",
                    "\tnewDialog.render( Ext.getBody() );",
                    "\tnewDialog.show();",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolnewtoolClick",
            "designerId": "260ebe2e-26ef-42b4-9976-58a4b1c346e6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolsubmit",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton45",
                "fn": "onSchoolsubmitClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Submit New School\" );",
                    "var myForm\t\t\t\t\t= button.up().getForm();",
                    "var myPanel\t\t\t\t\t= button.up();",
                    "var myGrid\t\t\t\t\t= this.getSchoolGridPanel();",
                    "",
                    "//Get the values from the form and insert a new record into the SchoolProfileStore.",
                    "",
                    "var formValues\t\t\t\t= myForm.getValues();",
                    "",
                    "//\tCreate an empty record",
                    "var myRecord\t= Ext.create('MySchool.model.school.SchoolProfileModel');",
                    "",
                    "//\tGet the stores that we will need",
                    "",
                    "var schoolname\t= formValues.name;",
                    "var district\t= formValues.district;",
                    "var custodianofrecords\t= formValues.custodianOfRecords;",
                    "var custodiantitle\t= formValues.custodianTitle;",
                    "var phone1\t\t= formValues.phone1;",
                    "var phone2\t\t= formValues.phone2;",
                    "var address1\t= formValues.address1;",
                    "var address2\t= formValues.address2;",
                    "var city\t\t= formValues.city;",
                    "var province\t= formValues.province;",
                    "var postalcode\t= formValues.postalcode;",
                    "var country\t\t= formValues.country;",
                    "var email\t\t= formValues.email;",
                    "var comments\t= formValues.comments;",
                    "var adminUser\t= formValues.adminUserName;",
                    "",
                    "",
                    "var myStore\t\t= this.getStore( 'school.SchoolProfileStore' );",
                    "",
                    "//debugger;",
                    "",
                    "",
                    "myRecord.set( 'id', null );",
                    "//myRecord.set( 'version', null );",
                    "",
                    "myRecord.set('whoUpdated', 'login');",
                    "myRecord.set('lastUpdated', new Date());",
                    "myRecord.set('email', email );",
                    "myRecord.set('name', schoolname );",
                    "myRecord.set('district', district );",
                    "myRecord.set('comments', comments);",
                    "myRecord.set('phone1', phone1 );",
                    "myRecord.set('phone2', phone2 );",
                    "myRecord.set('address1', address1);",
                    "myRecord.set('address2', address2);",
                    "myRecord.set('city', city);",
                    "myRecord.set('province', province);",
                    "myRecord.set('postalCode',postalcode);",
                    "myRecord.set('country',country);",
                    "myRecord.set('custodianOfRecords',custodianofrecords);",
                    "myRecord.set('custodianTitle', custodiantitle);",
                    "myRecord.set('adminUserName', adminUser);",
                    "",
                    "myRecord.set('enabled', true);",
                    "",
                    "",
                    "//add to the store",
                    "",
                    "myStore.add( myRecord );",
                    "",
                    "//sync the store.",
                    "myStore.sync();",
                    "",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolsubmitClick",
            "designerId": "3b91b622-20e0-42a8-ba03-ee3ff9d12d2b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolcancel",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton44",
                "fn": "onSchoolcancelClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Cancel New School\" );",
                    "var myForm = button.up().getForm();",
                    "myForm.reset();",
                    "button.up().hide();",
                    "button.up().up().close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolcancelClick",
            "designerId": "3c254990-bb02-4d05-bc08-ce8c8ba7e2d0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schooldeletetool",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyTool17",
                "fn": "onSchooldeletetoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchooldeletetoolClick",
            "designerId": "9735c8b3-baf0-425b-8396-c353cb0584d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoollocktool",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyTool18",
                "fn": "onSchoollocktoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoollocktoolClick",
            "designerId": "362267ef-aedd-40ec-8af9-14ba5fc4f4c4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofileformeditbutton",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton13",
                "fn": "onSchoolprofileformeditbuttonClick",
                "implHandler": [
                    "debugger;",
                    "",
                    "var myForm = this.getSchoolProfileForm();",
                    "var myFields = myForm.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "\tmyFields.items[i].enable();",
                    "}",
                    "//myForm.getForm().focus();studentprofileformeditbutton",
                    "var cancelButton\t= button.up().down('#schoolprofileformcanelbutton');",
                    "var saveButton\t\t= button.up().down('#schoolprofileformsavebutton');",
                    "cancelButton.enable();",
                    "saveButton.enable();",
                    "button.disable();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolprofileformeditbuttonClick",
            "designerId": "81074581-dbc4-4359-b880-722be3bbee10"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofileformcanelbutton",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton14",
                "fn": "onSchoolprofileformcanelbuttonClick",
                "implHandler": [
                    "var myForm = this.getSchoolProfileForm();",
                    "var myFields = myForm.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "\tmyFields.items[i].disable();",
                    "}",
                    "//myForm.getForm().focus();",
                    "//var cancelButton\t= button.up().down('#schoolprofileformcanelbutton');",
                    "var saveButton\t\t= button.up().down('#schoolprofileformsavebutton');",
                    "var editButton\t\t= button.up().down('#schoolprofileformeditbutton');",
                    "editButton.enable();",
                    "saveButton.disable();",
                    "button.disable();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolprofileformcanelbuttonClick",
            "designerId": "d33e8876-cf26-40d9-b0e7-fd3358575b4a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#schoolprofileformsavebutton",
                "designer|params": [
                    "button, e, eOpts"
                ],
                "designer|targetType": "MyButton15",
                "fn": "onSchoolprofileformsavebuttonClick",
                "implHandler": [
                    "debugger;",
                    "var myForm = this.getSchoolProfileForm();",
                    "var myFields = myForm.getForm().getFields();",
                    "for( var i = 0; i < myFields.length; i++ )",
                    "{",
                    "\tmyFields.items[i].disable();",
                    "}",
                    "//myForm.getForm().focus();",
                    "var cancelButton\t= button.up().down('#schoolprofileformcanelbutton');",
                    "//var saveButton\t\t= button.up().down('#schoolprofileformsavebutton');",
                    "var editButton\t\t= button.up().down('#schoolprofileformeditbutton');",
                    "editButton.enable();",
                    "cancelButton.disable();",
                    "button.disable();",
                    "this.saveProfileForm();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSchoolprofileformsavebuttonClick",
            "designerId": "67d5f7b5-d3dd-4425-882d-c11e0181a000"
        }
    ]
}